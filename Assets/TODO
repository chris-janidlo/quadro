FIXME:

TODO:
===== GAMEPLAY =====
	charge system
		add a meter called the "charge" meter or something similar
			TODO: figure out lore (stores excess electricity?)
		every time you hit a beat successfully, the charge increases. the more accurate you are, the better the increase (might even make the least accurate hit-tier not add anything)
		every time you miss a beat or hit when you shouldn't, the charge decreases
		when the charge meter fills up, a character-dependent finisher happens, and the meter resets back to zero
			base singleplayer finisher: clear half of your current cards

	split card rng in two - main rng and garbage rng
		main rng is used on the regular every-few-beats spawns
		garbage is used whenever a player manually causes a card spawn (like tetris garbage)
		main and garbage have their own seeds so they don't cross contaminate
		seeds should be the same for every player in a multiplayer match

	figure out how to handle previews when multiple cards are cleared
		preview the card after the multiple clears? (ie if there are 7 cards including the current one and 5 are cleared, show card #7)
		always give the players an empty measure after multiple clears?

===== CODE =====
	for future non-track spell targets: make ISpellTarget (or something similar) to mark classes that can be targeted

	make driver dependency injection generic enough to work with any number of players

	sync up music sources with timing source

===== MUSIC =====
	create basic beat
		dial-up inspired chords
		chilled out nostalgic chords seem to work well

===== UI =====
	complete card redesign
		want a cleaner outline, like cogmind's UI outlines
		actual chord symbols?

	add track meter
		want sexy transitions to and from the meter
		little preview cards there too

	reorder UI weight/centering

	rework colors and language to not chide the player for playing a non-beat-clearing note
		call it something other than "flub"
		mark non-cleared cards symbolically instead of with colors?

	add meter for card delta system
		segmented meter twice as long as the length of a bar
		dash in the middle
